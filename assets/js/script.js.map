{"version":3,"sources":["script.js"],"names":["jQuery","$","minimumDate","maximumDate","$firstPage","$secondPage","schedules","Array","getJSON","data","$insertAppTitle","text","appTitle","$fetchScheduleData","sort","a","b","SCHEDULE_D","$calculateMinimumAndMaximumDate","i","length","_this","Date","Day","WEEKDAY","getDay","Duration","alert","$insertDateTextsToFirstPage","minimumDateText","MONTH_NAMES","getMonth","getDate","maximumDateText","$renderingBasicDOMs","tourDates","Math","floor","MS_PER_DAY","currentDate","setDate","currentDateText","getFullYear","$insert","find","append","$renderingEachScheduleDetail","each","$_this","this","LIST_D","startTime","getHours","getMinutes","endTime"],"mappings":"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","file":"script.js","sourcesContent":["jQuery(function($) {\r\n\r\n  // major DOMs\r\n  var $firstPage = $('#jsi-first-page');\r\n  var $secondPage = $('#jsi-second-page');\r\n\r\n  // major variants\r\n  var schedules = new Array();\r\n  var minimumDate;\r\n  var maximumDate;\r\n  var tourDates;\r\n\r\n  $.getJSON('./assets/js/schedule.json', function(data) {\r\n    $insertAppTitle = function() {\r\n      $('.jsc-app-title').text(data.appTitle);\r\n    }\r\n\r\n    $fetchScheduleData = function() {\r\n      schedules = data.schedules;\r\n      schedules.sort(function(a, b){\r\n        if( a[SCHEDULE_D[1]] < b[SCHEDULE_D[1]] ) return -1;\r\n        if( a[SCHEDULE_D[1]] > b[SCHEDULE_D[1]] ) return 1;\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    $calculateMinimumAndMaximumDate = function() {\r\n      for(var i = 0; i < schedules.length; i++) {\r\n        var _this = schedules[i];\r\n\r\n        // clean up schedules data\r\n        schedules[i][SCHEDULE_D[1]] = new Date(_this[SCHEDULE_D[1]]);\r\n        schedules[i][SCHEDULE_D[2]] = new Date(_this[SCHEDULE_D[2]]);\r\n        schedules[i].Day            = WEEKDAY[_this[SCHEDULE_D[1]].getDay()];\r\n        schedules[i].Duration       = schedules[i][SCHEDULE_D[2]] - schedules[i][SCHEDULE_D[1]];\r\n\r\n        // for debug\r\n        if ( schedules[i][SCHEDULE_D[1]] > schedules[i][SCHEDULE_D[2]] ) {\r\n          alert('ERROR: you set earlier date as \"Start\" than \"End\" in schedule-' + i);\r\n        }\r\n\r\n        if ( !minimumDate || minimumDate > schedules[i][SCHEDULE_D[1]] ) {\r\n          minimumDate = schedules[i][SCHEDULE_D[1]];\r\n        }\r\n\r\n        if ( !maximumDate || maximumDate < schedules[i][SCHEDULE_D[2]] ) {\r\n          maximumDate = schedules[i][SCHEDULE_D[2]];\r\n        }\r\n      }\r\n    }\r\n\r\n    $insertDateTextsToFirstPage = function (){\r\n      var minimumDateText = WEEKDAY[minimumDate.getDay()] + ' ' + MONTH_NAMES[minimumDate.getMonth()] + ' ' + minimumDate.getDate();\r\n      var maximumDateText = WEEKDAY[maximumDate.getDay()] + ' ' + MONTH_NAMES[maximumDate.getMonth()] + ' ' + maximumDate.getDate();\r\n      $('#jsi-from-date').text(minimumDateText);\r\n      $('#jsi-to-date').text(maximumDateText);\r\n    }\r\n\r\n    $renderingBasicDOMs = function () {\r\n      var tourDates = Math.floor((maximumDate - minimumDate + 1) / MS_PER_DAY) + 1;\r\n      var currentDate = new Date(minimumDate);\r\n\r\n      for (var i = 0; i < tourDates; i++) {\r\n        if ( i != 0 ) {\r\n          new Date(currentDate.setDate(currentDate.getDate() + 1));\r\n        }\r\n\r\n        var currentDateText = WEEKDAY[currentDate.getDay()] + ' ' + MONTH_NAMES[currentDate.getMonth()] + ' ' + currentDate.getDate() + ' ' + currentDate.getFullYear();\r\n\r\n        // insert date for first page\r\n        var $insert =  '<li>';\r\n            $insert +=   '<dl>';\r\n            $insert +=     '<dt>Day ' + (i + 1) + '</dt>';\r\n            $insert +=     '<dd>' + currentDateText + '</dd>';\r\n            $insert +=   '</dl>';\r\n            $insert += '</li>';\r\n        $firstPage.find('ol').append($insert);\r\n\r\n        // insert each days page\r\n        var $insert =  '<ol data-month=\"' + currentDate.getMonth() + '\" data-day=\"' + currentDate.getDate() + '\">';\r\n            $insert +=   '<li>';\r\n            $insert +=     '<h2>' + currentDateText + '</h2>';\r\n            $insert +=     '<ul>';\r\n            $insert +=     '</ul>';\r\n            $insert +=     '<p><a href=\"javascript: void(0);\">Back</a></p>';\r\n            $insert +=   '</li>';\r\n            $insert += '</ol>';\r\n        $secondPage.append($insert);\r\n      }\r\n    }\r\n\r\n    $renderingEachScheduleDetail = function () {\r\n      for(var i = 0; i < schedules.length; i++) {\r\n        var _this = schedules[i];\r\n\r\n        $secondPage.find('ol').each(function() {\r\n          var $_this = $(this);\r\n          if (\r\n              $(this).data(LIST_D[0]) === _this[[SCHEDULE_D[1]]].getMonth() &&\r\n              $(this).data(LIST_D[1]) === _this[[SCHEDULE_D[1]]].getDate()\r\n            ) {\r\n            var startTime =  _this[SCHEDULE_D[3]];\r\n                startTime += ' / ';\r\n                startTime += MONTH_NAMES[_this[SCHEDULE_D[1]].getMonth()];\r\n                startTime += ' ';\r\n                startTime += _this[SCHEDULE_D[1]].getDate();\r\n                startTime += ' ';\r\n                if ( _this[SCHEDULE_D[1]].getHours() < 10 ) {\r\n                  startTime += '0';\r\n                }\r\n                startTime += _this[SCHEDULE_D[1]].getHours();\r\n                startTime += ':';\r\n                if ( _this[SCHEDULE_D[1]].getMinutes() < 10 ) {\r\n                  startTime += '0';\r\n                }\r\n                startTime += _this[SCHEDULE_D[1]].getMinutes();\r\n\r\n            var endTime =  MONTH_NAMES[_this[SCHEDULE_D[2]].getMonth()];\r\n                endTime += ' ';\r\n                endTime += _this[SCHEDULE_D[2]].getDate();\r\n                endTime += ' ';\r\n                if ( _this[SCHEDULE_D[2]].getHours() < 10 ) {\r\n                  startTime += '0';\r\n                }\r\n                endTime += _this[SCHEDULE_D[2]].getHours();\r\n                endTime += ':';\r\n                if ( _this[SCHEDULE_D[2]].getMinutes() < 10 ) {\r\n                  startTime += '0';\r\n                }\r\n                endTime += _this[SCHEDULE_D[2]].getMinutes();\r\n\r\n            var $insert =  '<li>';\r\n                $insert +=   '<h3>' + _this[SCHEDULE_D[0]] + '</h3>';\r\n                $insert +=   '<p><address>' + _this[SCHEDULE_D[6]] + '</address></p>';\r\n                $insert +=   '<p><time>' + startTime + '</time> - <time>' + endTime + '</time></p>';\r\n                $insert +=   '<p>' + _this[SCHEDULE_D[5]] + '</p>';\r\n                $insert += '</li>';\r\n\r\n            $_this.find('li').find('ul').append($insert);\r\n          }\r\n        });\r\n      }\r\n    }\r\n\r\n    $(function() {\r\n      $insertAppTitle();\r\n      $fetchScheduleData();\r\n      $calculateMinimumAndMaximumDate();\r\n      $insertDateTextsToFirstPage();\r\n      $renderingBasicDOMs();\r\n      $renderingEachScheduleDetail();\r\n    });\r\n  });\r\n});\r\n"],"sourceRoot":"/source/"}